# Римские цифры представлены семью различными символами: I, V, X, L, C, D и M. Символ-Значение I-1 V-5 X-10
# L-50 C-100 D-500 M-1000. Например 3 это III римской цифрой, просто три единицы складываются вместе. 13
# записывается как XIII, то есть X+III. Число 17 это XVII, то есть XX+V+II. Римские цифры обычно пишутся от наибольшего
# к наименьшему слева направо. Однако цифра четыре, это не IIII. Вместо этого число четыре записывается как IV.
# Поскольку единица стоит перед пятёркой, мы вычитаем её, получая четыре. Тот же принцип применим и к числу девять,
# которое записывается как IX. Существует шесть случаев, когда используется вычитание: I перед V (5) и X (10),
# получаем 4 и 9. X перед L (50) и C (100), получаем 40 и 90. C перед D (500) и M (1000), получаем 400 и 900.
# Реализуйте функцию, принимающую один аргумент (римское число) и возвращающее арабское. Ограничения: 1<=s.lenght<=15,
# s содержит только символы ('I', 'V', 'X', 'L', 'C', 'D', 'M'). Гарантируется, что s является допустимой римской цифрой
# в диапазоне [1,3999].
def convert(roman):
    numbers = ["I", "II", "III", "V", "X", "L", "C", "D", "M"]
    numbers = numbers[::-1]
    arabic = [1, 2, 3, 5, 10, 50, 100, 500, 1000]
    arabic = arabic[::-1]
    res = ""
    for i in range(len(numbers)):
        roman = roman.replace(numbers[i], str(arabic[i]) + " ")
    print(roman)
    a = roman.split()
    a1 = []
    for x in a:
        a1.append(int(x))
    print(a1)
    a2 = []
    i = 0
    for n in range(len(a1) - 1):
        if i == len(a1) - 1:
            break
        if a1[i] < a1[i+1]:
            a2.append(a1[i+1] - a1[i])
            i = i + 1
        else:
            a2.append(a1[i])
        i = i + 1
    if a1[-1] < a1[-2]:
        a2.append(int(a[-1]))
    print(a2)
    return sum(a2)


# print(convert("XIII"))
# print(convert("LX"))
# print(convert("CDXVII"))
print(convert("MCCXXXVII"))